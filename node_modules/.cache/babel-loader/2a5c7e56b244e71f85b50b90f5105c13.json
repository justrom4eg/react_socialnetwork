{"ast":null,"code":"import { renderEntireTree } from \"../../render\";\nlet state = {\n  profilePage: {\n    posts: [{\n      id: \"1\",\n      message: \"How are you\",\n      like: \"23\"\n    }, {\n      id: \"2\",\n      message: \"My first message\",\n      like: \"47\"\n    }],\n    newPostText: \"It-kamasutra\"\n  },\n  messagesPage: {\n    dialogs: [{\n      name: \"Dimon\",\n      id: \"1\"\n    }, {\n      name: \"Romu4\",\n      id: \"2\"\n    }, {\n      name: \"Nazar\",\n      id: \"3\"\n    }, {\n      name: \"Nastya\",\n      id: \"4\"\n    }, {\n      name: \"Ira\",\n      id: \"5\"\n    }],\n    messages: [{\n      id: \"1\",\n      text: \"How are you\"\n    }, {\n      id: \"2\",\n      text: \"How is your it-kamasutra?\"\n    }, {\n      id: \"3\",\n      text: \"I like it\"\n    }, {\n      id: \"4\",\n      text: \"Me too!!!!\"\n    }, {\n      id: \"5\",\n      text: \"Have a nice day!)\"\n    }],\n    newMessageText: \"text here!!\"\n  }\n};\nexport let addPost = () => {\n  let newPost = {\n    id: \"3\",\n    message: state.profilePage.newPostText,\n    like: \"0\"\n  };\n  state.profilePage.posts.push(newPost);\n  state.profilePage.newPostText = \"\";\n  renderEntireTree(state);\n};\nexport let changeNewPostText = text1 => {\n  state.profilePage.newPostText = text1;\n  renderEntireTree(state);\n};\nexport let addMessages = message => {\n  let newMessage = {\n    id: \"3\",\n    message: state.messagesPage.newMessageText\n  };\n  state.messagesPage.messages.push(newMessage);\n  renderEntireTree(state);\n};\nexport let changeNewMessageText = message => {\n  state.profilePage.newPostText = message;\n  renderEntireTree(state);\n};\nexport default state;","map":{"version":3,"sources":["/Users/roman_maik/Desktop/social_network/react_socialnetwork/src/comppnents/Redux/State.js"],"names":["renderEntireTree","state","profilePage","posts","id","message","like","newPostText","messagesPage","dialogs","name","messages","text","newMessageText","addPost","newPost","push","changeNewPostText","text1","addMessages","newMessage","changeNewMessageText"],"mappings":"AAAA,SAAQA,gBAAR,QAA+B,cAA/B;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,WAAW,EAAE;AACTC,IAAAA,KAAK,EAAE,CACH;AAACC,MAAAA,EAAE,EAAE,GAAL;AAAUC,MAAAA,OAAO,EAAE,aAAnB;AAAkCC,MAAAA,IAAI,EAAC;AAAvC,KADG,EAEH;AAACF,MAAAA,EAAE,EAAE,GAAL;AAAUC,MAAAA,OAAO,EAAE,kBAAnB;AAAuCC,MAAAA,IAAI,EAAC;AAA5C,KAFG,CADE;AAKTC,IAAAA,WAAW,EAAE;AALJ,GADL;AAQRC,EAAAA,YAAY,EAAE;AACVC,IAAAA,OAAO,EAAE,CACL;AAACC,MAAAA,IAAI,EAAE,OAAP;AAAgBN,MAAAA,EAAE,EAAE;AAApB,KADK,EAEL;AAACM,MAAAA,IAAI,EAAE,OAAP;AAAgBN,MAAAA,EAAE,EAAE;AAApB,KAFK,EAGL;AAACM,MAAAA,IAAI,EAAE,OAAP;AAAgBN,MAAAA,EAAE,EAAE;AAApB,KAHK,EAIL;AAACM,MAAAA,IAAI,EAAE,QAAP;AAAiBN,MAAAA,EAAE,EAAE;AAArB,KAJK,EAKL;AAACM,MAAAA,IAAI,EAAE,KAAP;AAAcN,MAAAA,EAAE,EAAE;AAAlB,KALK,CADC;AAQVO,IAAAA,QAAQ,EAAE,CACN;AAACP,MAAAA,EAAE,EAAE,GAAL;AAAUQ,MAAAA,IAAI,EAAE;AAAhB,KADM,EAEN;AAACR,MAAAA,EAAE,EAAE,GAAL;AAAUQ,MAAAA,IAAI,EAAE;AAAhB,KAFM,EAGN;AAACR,MAAAA,EAAE,EAAE,GAAL;AAAUQ,MAAAA,IAAI,EAAE;AAAhB,KAHM,EAIN;AAACR,MAAAA,EAAE,EAAE,GAAL;AAAUQ,MAAAA,IAAI,EAAE;AAAhB,KAJM,EAKN;AAACR,MAAAA,EAAE,EAAE,GAAL;AAAUQ,MAAAA,IAAI,EAAE;AAAhB,KALM,CARA;AAeVC,IAAAA,cAAc,EAAE;AAfN;AARN,CAAZ;AA2BA,OAAO,IAAIC,OAAO,GAAG,MAAM;AACvB,MAAIC,OAAO,GAAG;AACVX,IAAAA,EAAE,EAAE,GADM;AAEVC,IAAAA,OAAO,EAAEJ,KAAK,CAACC,WAAN,CAAkBK,WAFjB;AAGVD,IAAAA,IAAI,EAAE;AAHI,GAAd;AAKAL,EAAAA,KAAK,CAACC,WAAN,CAAkBC,KAAlB,CAAwBa,IAAxB,CAA6BD,OAA7B;AACAd,EAAAA,KAAK,CAACC,WAAN,CAAkBK,WAAlB,GAAgC,EAAhC;AACAP,EAAAA,gBAAgB,CAACC,KAAD,CAAhB;AACH,CATM;AAWP,OAAO,IAAIgB,iBAAiB,GAAIC,KAAD,IAAW;AACtCjB,EAAAA,KAAK,CAACC,WAAN,CAAkBK,WAAlB,GAAgCW,KAAhC;AACAlB,EAAAA,gBAAgB,CAACC,KAAD,CAAhB;AACH,CAHM;AAKP,OAAO,IAAIkB,WAAW,GAAId,OAAD,IAAa;AAClC,MAAIe,UAAU,GAAG;AACbhB,IAAAA,EAAE,EAAE,GADS;AAEbC,IAAAA,OAAO,EAAEJ,KAAK,CAACO,YAAN,CAAmBK;AAFf,GAAjB;AAIAZ,EAAAA,KAAK,CAACO,YAAN,CAAmBG,QAAnB,CAA4BK,IAA5B,CAAiCI,UAAjC;AACApB,EAAAA,gBAAgB,CAACC,KAAD,CAAhB;AACH,CAPM;AASP,OAAO,IAAIoB,oBAAoB,GAAIhB,OAAD,IAAa;AAC3CJ,EAAAA,KAAK,CAACC,WAAN,CAAkBK,WAAlB,GAAgCF,OAAhC;AACAL,EAAAA,gBAAgB,CAACC,KAAD,CAAhB;AACH,CAHM;AAKP,eAAeA,KAAf","sourcesContent":["import {renderEntireTree} from \"../../render\";\n\nlet state = {\n    profilePage: {\n        posts: [\n            {id: \"1\", message: \"How are you\", like:\"23\"},\n            {id: \"2\", message: \"My first message\", like:\"47\"}\n        ],\n        newPostText: \"It-kamasutra\"\n    },\n    messagesPage: {\n        dialogs: [\n            {name: \"Dimon\", id: \"1\"},\n            {name: \"Romu4\", id: \"2\"},\n            {name: \"Nazar\", id: \"3\"},\n            {name: \"Nastya\", id: \"4\"},\n            {name: \"Ira\", id: \"5\"}\n        ],\n        messages: [\n            {id: \"1\", text: \"How are you\"},\n            {id: \"2\", text: \"How is your it-kamasutra?\"},\n            {id: \"3\", text: \"I like it\"},\n            {id: \"4\", text: \"Me too!!!!\"},\n            {id: \"5\", text: \"Have a nice day!)\"},\n        ],\n        newMessageText: \"text here!!\"\n    }\n};\n\nexport let addPost = () => {\n    let newPost = {\n        id: \"3\",\n        message: state.profilePage.newPostText,\n        like: \"0\"\n    };\n    state.profilePage.posts.push(newPost);\n    state.profilePage.newPostText = \"\";\n    renderEntireTree(state);\n};\n\nexport let changeNewPostText = (text1) => {\n    state.profilePage.newPostText = text1;\n    renderEntireTree(state);\n};\n\nexport let addMessages = (message) => {\n    let newMessage = {\n        id: \"3\",\n        message: state.messagesPage.newMessageText\n    };\n    state.messagesPage.messages.push(newMessage);\n    renderEntireTree(state);\n};\n\nexport let changeNewMessageText = (message) => {\n    state.profilePage.newPostText = message;\n    renderEntireTree(state);\n};\n\nexport default state;"]},"metadata":{},"sourceType":"module"}